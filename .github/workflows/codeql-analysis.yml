name: "CodeQL Taint Tracking"

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  codeql:
    name: Analisi CodeQL
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'cpp' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # Assicuriamoci che la directory delle query esista
    - name: Ensure custom queries directory
      run: |
        mkdir -p .github/codeql/custom-queries

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        queries: ./.github/codeql/custom-queries
        debug: true

    - name: Install build dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libsdl1.2-dev bison flex
        
    # Fix specifico per il problema con dtc
    - name: Fix DTC yylloc issue
      run: |
        # Modifica il file dtc-lexer.l per correggere il conflitto yylloc
        echo "Fixing yylloc conflict in DTC lexer"
        if [ -f "scripts/dtc/dtc-lexer.l" ]; then
          # Modifica il sorgente
          sed -i 's/YYLTYPE yylloc/extern YYLTYPE yylloc/g' scripts/dtc/dtc-lexer.l
          echo "Modified dtc-lexer.l"
          cat scripts/dtc/dtc-lexer.l | grep -A 1 -B 1 yylloc
        fi
        
        # Assicuriamoci che LEX non venga usato (useremo i file già generati)
        mkdir -p scripts/dtc/
        touch scripts/dtc/dtc-lexer.lex.c
        
        # Assicuriamoci che il file dtc-lexer.lex.c sia statico
        if [ -f "scripts/dtc/dtc-lexer.lex.c" ]; then
          sed -i 's/YYLTYPE yylloc/extern YYLTYPE yylloc/g' scripts/dtc/dtc-lexer.lex.c
          echo "Modified dtc-lexer.lex.c"
          cat scripts/dtc/dtc-lexer.lex.c | grep -A 1 -B 1 yylloc || true
        fi

    # Configurazione e build di U-Boot
    - name: Build U-Boot
      run: |
        # Prima configura sandbox
        make sandbox_defconfig
        
        # Compila con modalità a prova di errore
        MAKEFLAGS="HOSTCC=gcc -DUSE_HOSTCC" make -j$(nproc) -k || true
        
        # Se la compilazione fallisce comunque, almeno alcuni file avranno 
        # attraversato il processo di compilazione per l'analisi

    - name: Perform CodeQL analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: '/language:${{ matrix.language }}'
        